name: Check New Release

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Check if branch exists
        id: check-branch
        run: |
          latest_tag=$(curl -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -sfL -m 60 ${{ github.api_url }}/repos/telegramdesktop/tdesktop/releases/latest | jq -r '.tag_name')
          echo ::set-output name=latest_tag::"$latest_tag"
          http_code=$(curl -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -sL -m 60 -o /tmp/branch.json -w "%{http_code}" ${{ github.api_url }}/repos/${{ github.repository }}/branches/"$latest_tag")
          echo http_code="$http_code"
          echo "body=$(cat /tmp/branch.json)"
          branch_not_found=false
          if [[ "$http_code" == '404' && "$(jq -r '.message' /tmp/branch.json)" == 'Branch not found' ]]; then
            branch_not_found=true
          fi
          echo ::set-output name=not_found::"$branch_not_found"

      - uses: fregante/setup-git-user@v1
        if: steps.check-branch.outputs.not_found == 'true'

      - name: Checkout new branch if not exists
        if: steps.check-branch.outputs.not_found == 'true'
        env:
          latest_tag: ${{ steps.check-branch.outputs.latest_tag }}
        run: |
          git remote add upstream https://github.com/telegramdesktop/tdesktop.git
          git fetch upstream
          git fetch --unshallow origin
          git checkout "refs/tags/$latest_tag"
          git checkout -b "${latest_tag}-my"
          find .github/workflows/ -type f ! -name win.yml -delete
          git commit -am "Remove all workflows except win.yml"
          git cherry-pick edf05135e99d5e2d0eaef0c0912d10dcc56cd433^..9929000f7cb495a6c5566d04ebae1178e489da89
          git push origin refs/heads/"${latest_tag}-my"
